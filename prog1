#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 100

typedef struct {
    int array[MAX_SIZE];
    int top;
} Stack;

void initialize(Stack *s) {
    s->top = -1;
}

int isEmpty(Stack *s) {
    return s->top == -1;
}

int isFull(Stack *s) {
    return s->top == MAX_SIZE - 1;
}

void push(Stack *s, int x) {
    if (isFull(s)) {
        printf("Stack overflow\n");
        return;
    }
    s->array[++s->top] = x;
}

int pop(Stack *s) {
    if (isEmpty(s)) {
        printf("Stack underflow\n");
        return -1;
    }
    return s->array[s->top--];
}

void multipop(Stack *s, int K) {
    while (K > 0 && !isEmpty(s)) {
        pop(s);
        K--;
    }
}

int main() {
    Stack s;
    initialize(&s);

    int n, operation, x, K;
    printf("Enter the number of operations: ");
    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        printf("Enter operation (1 for push, 2 for pop, 3 for multipop): ");
        scanf("%d", &operation);

        switch (operation) {
            case 1:
                printf("Enter value to push: ");
                scanf("%d", &x);
                push(&s, x);
                break;
            case 2:
                if (!isEmpty(&s))
                    printf("Popped value: %d\n", pop(&s));
                break;
            case 3:
                printf("Enter value of K for multipop: ");
                scanf("%d", &K);
                multipop(&s, K);
                break;
            default:
                printf("Invalid operation\n");
        }
    }

    return 0;
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include <stdio.h>

// Function to increment a k-bit binary counter
void incrementCounter(int counter[], int k) {
    int carry = 1;
    for (int i = 0; i < k; i++) {
        counter[i] += carry;
        carry = counter[i] / 2;
        counter[i] %= 2;
    }
}

// Function to print the counter's current value
void printCounter(int counter[], int k) {
    for (int i = k - 1; i >= 0; i--) {
        printf("%d", counter[i]);
    }
    printf("\n");
}

int main() {
    int k, n;

    printf("Enter the number of bits for the counter: ");
    scanf("%d", &k);

    int counter[k];
    for (int i = 0; i < k; i++) {
        counter[i] = 0;
    }

    printf("Enter the number of increment operations: ");
    scanf("%d", &n);

    printf("Initial counter value: ");
    printCounter(counter, k);

    for (int i = 0; i < n; i++) {
        incrementCounter(counter, k);
        printf("After increment %d: ", i + 1);
        printCounter(counter, k);
    }

    return 0;
}
